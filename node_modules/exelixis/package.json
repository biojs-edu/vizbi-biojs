{
  "name": "exelixis",
  "description": "Interactive phylogenetic tree viewer for the web",
  "version": "0.0.4",
  "homepage": "https://github.com/daviddao/exelixis",
  "author": {
    "name": "David",
    "url": "https://www.daviddao.de"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/daviddao/exelixis.git"
  },
  "bugs": {
    "url": "https://github.com/daviddao/exelixis/issues"
  },
  "licenses": [
    {
      "type": "Apache 2",
      "url": "https://github.com/daviddao/exelixis/blob/master/LICENSE"
    }
  ],
  "main": "lib/index.js",
  "scripts": {
    "test": "mocha",
    "build": "mkdirp build && browserify -r ./:exelixis -o build/exelixis.js",
    "build-browser": "npm run build",
    "prepublish": "npm run build",
    "watch": "watchify -r ./:exelixis -v -o build/exelixis.js",
    "sniper": "biojs-sniper ."
  },
  "dependencies": {
    "biojs-io-newick": "^1.5.0",
    "tnt.tree": "0.0.13"
  },
  "devDependencies": {
    "mkdirp": "^0.5.0",
    "browserify": "6.x",
    "biojs-sniper": "0.x",
    "watchify": "^1.0.6",
    "chai": "1.x",
    "mocha": "1.x"
  },
  "sniper": {
    "js": [
      "/build/exelixis.js"
    ],
    "snippets": [
      "examples"
    ],
    "css": [],
    "first": "createAndUpdate"
  },
  "keywords": [
    "biojs",
    "phylogeny",
    "tree generator"
  ],
  "readme": "# exelixis\n\n[![NPM version](http://img.shields.io/npm/v/exelixis.svg)](https://www.npmjs.org/package/exelixis)  \n\n> Interactive and easy-to-use phylogenetic tree viewer for the web build on [TnT.tree](https://github.com/emepyc/tnt.tree). \n\n## Getting Started\nInstall the module with: `npm install exelixis` and build it with `npm run prepublish`\nHave a look at the examples by starting the server with `npm run sniper`\n\n```javascript\nvar exe = require('exelixis');\nvar createTree = exe.createTree;\nvar updateTree = exe.updateTree;\n```\n\n## Documentation\n\n\n### Default opts \nFollowing default settings can be customized. \n\n```javascript\nvar opts = {\n\t\tel : document.getElementById(\"yourDiv\"),\n\t\ttree : {\n\t\t\tdata : \"(homo_sapiens:12,(mus_musculus:12,(danio_rerio:13,(pan_troglodytes:9,(taeniopygia_guttata:10,callithrix_jacchus:11):12):12):10);\",\t\n\t\t\twidth : 500,\n\t\t\tscale : false,\n\t\t\tlayoutInput : \"vertical\",\n\t\t},\n\t\tlabel : {\n\t\t\tfontsize : 12,\n\t\t\tusePics : false, \n\t\t\tpics : {\n\t\t\t\tpictureSource : pics,\n\t\t\t\tpictureWidth : 30,\n\t\t\t\tpictureHeight : 40,\n\t\t\t},\n\t\t},\n\t\tnodes : {\n\t\t\ttoggle : false, \n\t\t\tselect: false, \n\t\t\tsize : 5,\n\t\t\tfill : \"grey\",\n\t\t\tstroke : \"black\",\n\t\t\tselectedFill : \"steelblue\",\n\t\t\tselectedSize : 4,\n\t\t},\n};\n```\n\n#### el \nChange this to the div element you want to plot in your tree\n\n#### tree\n* `data` (string) takes as input your newick string\n* `width` (int) is the width of your tree\n* `height` (int) is the height of your labels (currently under work)\n* `scale` (boolean) scales the tree according to its branch lengths given in the newick string\n* `layoutInput` (\"vertical\" or \"radial\") changes tree layout\n\n#### label\n* `fontsize` (int) sets the fontsize\n* `usePics` (boolean) use pictures in the label\n\n#### pics\n* `pictureSource` (array) links to the png picture array you want to display. PicturesID has to be the same as the taxa names in the newick string.\n* `pictureWidth` (int) sets the width of the picture\n* `pictureHeight` (int) sets the picture height\n\n#### nodes\n* `toggle` (boolean) clicking nodes will toggle its subtree\n* `select` (boolean) change node to color `selectedFill` and size `selectedSize` when clicked\n* `fill` (color) nodefill color\n* `stroke` (color) nodestroke color\n\n\n\n#### .createTree(opts)\n\n**Parameter**: `opts` a json containing settings\n\nThe 'createTree' method returns a phylogenetic tree.\n\nHow to use this method\n\n```javascript\nvar tree = createTree();\n```\n\nnot using any opts creates a tree with default opts\n\n#### .updateTree(tree,opts)\n\n**Parameter**: `tree` a tree object returned by `createTree()` , `opts` a json containing settings\n\nThe 'updateTree' method updates all opts properties which are given in `opts` with animations on runtime and saves its opts.\nAll opts properties which are not mentioned stays the same as previously.\n\nHow to use this method\n\n```javascript\nupdateTree(tree, {tree:{data: \"(Ape,(Bear,(Clown,Dolphin)))\", width: 300, heigth: 20}});\n```\n\n## Contributing\n\nAll contributions are welcome.\n\n## Support\n\nIf you have any problem or suggestion please open an issue [here](https://github.com/daviddao/exelixisjs/issues).\n\n## License \nThis software is licensed under the Apache 2 license, quoted below.\n\nCopyright (c) 2015, David\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n",
  "readmeFilename": "README.md",
  "gitHead": "7924bec4ca0b9801312b5f60e61e4e00b95ed570",
  "_id": "exelixis@0.0.4",
  "_shasum": "6fe838b541b13fde8093669c1555ebf93dbee5fb",
  "_from": "exelixis@*"
}
