{
  "name": "msa",
  "description": "Display multiple sequences",
  "version": "0.3.29",
  "homepage": "http://github.com/greenify/msa",
  "repository": {
    "type": "git",
    "url": "git://github.com/greenify/msa"
  },
  "contributors": [
    {
      "name": "Sebastian Wilzbach",
      "email": "sebi.wilzbach@gmail.com",
      "url": "http://sebi.wilzba.ch"
    },
    {
      "name": "Tatyana Goldberg",
      "email": "goldberg@rostlab.org",
      "url": "http://rostlab.org/~goldberg/"
    },
    {
      "name": "Guy Yachdav",
      "email": "yachdav@rostlab.org",
      "url": "https://www.linkedin.com/in/gyachdav"
    }
  ],
  "author": {
    "name": "Sebastian Wilzbach",
    "email": "sebi.wilzbach@gmail.com"
  },
  "dependencies": {
    "backbone-childs": "^1.0.3",
    "backbone-thin": "^1.0.8",
    "backbone-viewj": "^1.0.1",
    "biojs-events": "^0.0.4",
    "biojs-io-clustal": "0.x",
    "biojs-io-fasta": "0.x",
    "biojs-io-gff": "0.x",
    "biojs-model": "^0.0.2",
    "biojs-vis-seqlogo": "^0.0.11",
    "blueimp_canvastoblob": "^1.0.0",
    "browser-saveas": "^1.0.0",
    "dom-helper": "^1.0.0",
    "jbone": "^1.0.18",
    "koala-js": "^1.0.7",
    "menu-builder": "^0.0.7",
    "mouse-pos": "^1.0.3",
    "msa-colorschemes": "^1.0.8",
    "msa-seqtools": "^0.1.6",
    "sniper": "^0.2.16",
    "stat.seqs": "^0.1.8",
    "underscore": "^1.6.0",
    "xhr": "^1.17.0"
  },
  "devDependencies": {
    "benchmark": "^1.0.0",
    "biojs-io-newick": "git://github.com/greenify/biojs-io-newick",
    "sniper": "^0.2.7",
    "browserify": "^8.0.3",
    "chai": "^1.9.1",
    "codo": "^2.0.9",
    "coffee-script": "^1.7.1",
    "coffeeify": "^0.7.0",
    "coffeelint": "^1.5.5",
    "cssify": "^0.6.0",
    "deepcopy": "^0.3.3",
    "del": "^0.1.3",
    "gulp": "^3.8.7",
    "gulp-chmod": "^1.1.0",
    "gulp-coffeelint": "^0.3.3",
    "gulp-concat": "^2.3.4",
    "gulp-docco": "0.0.4",
    "gulp-gzip": "0.0.8",
    "gulp-minify-css": "^0.3.7",
    "gulp-mocha": "^0.5.2",
    "gulp-mocha-phantomjs": "^0.5.0",
    "gulp-mocha-selenium": "^1.0.0",
    "gulp-rename": "^1.2.0",
    "gulp-run": "^1.6.3",
    "gulp-streamify": "0.0.5",
    "gulp-uglify": "^0.3.1",
    "gulp-util": "^3.0.0",
    "gulp-watch": "^0.6.9",
    "mkdirp": "^0.5.0",
    "mocha": "^1.21.4",
    "mocha-phantomjs": "^3.5.0",
    "msa-tnt": "^0.1.7",
    "phantom": "^0.7.0",
    "phantomjs": "^1.9.7-15",
    "prunner": "^1.0.0",
    "shelljs": "^0.3.0",
    "sinon": "^1.12.1",
    "through2": "^0.6.3",
    "tnt.tree": "0.0.10",
    "uglify-js": "~2.4.15",
    "vinyl-source-stream": "^1.0.0",
    "watchify": "^2.2.1"
  },
  "keywords": [
    "bio",
    "biojs",
    "galaxy-vis",
    "msa",
    "alignment",
    "sequence"
  ],
  "main": "lib/index.js",
  "scripts": {
    "test": "gulp test",
    "prepublish": "gulp test-fast && gulp build && rm -rf lib && coffee --bare --compile --output lib/ src/ && ( cd src/; find . -type f -not -iname '*.coffee' -exec cp '{}' '../lib/{}' ';' )",
    "build-browser": "gulp build-browser",
    "build-browser-min": "gulp build",
    "sniper": "biojs-sniper .",
    "watch": "gulp watch",
    "w": "prunner 'npm run sniper' 'npm run watch'",
    "browserify-pure": "browserify -t coffeeify --extension='.coffee' -t cssify -r ./browser:msa -r biojs-io-clustal -r biojs-io-fasta -r xhr -r biojs-io-gff -d -o build/msa.js"
  },
  "license": "Apache 2",
  "browserify": {
    "exclude": [
      "biojs-io-newick",
      "msa-tnt"
    ]
  },
  "biojs": {
    "registryHeight": "400",
    "screenshot": "screenshot.png",
    "logo": "/logo.png",
    "eventInstance": "m.g"
  },
  "sniper": {
    "js": [
      "build/msa.js"
    ],
    "css": [
      "css/msa.css"
    ],
    "snippets": [
      "snippets"
    ],
    "exposed": [
      "biojs-io-fasta",
      "biojs-io-clustal",
      "biojs-io-gff",
      "xhr"
    ],
    "first": "fer1"
  },
  "style": "./css/msa.css",
  "galaxy": {
    "datatypes": [
      "sequence.Fasta",
      "sequences",
      "msa.clustal"
    ]
  },
  "readme": "msa\n==========\n\nThe BioJS MSA Viewer written in CoffeeScript. \n\n```\n          .         .                                              \n         ,8.       ,8.            d888888o.           .8.          \n        ,888.     ,888.         .`8888:' `88.        .888.         \n       .`8888.   .`8888.        8.`8888.   Y8       :88888.        \n      ,8.`8888. ,8.`8888.       `8.`8888.          . `88888.       \n     ,8'8.`8888,8^8.`8888.       `8.`8888.        .8. `88888.      \n    ,8' `8.`8888' `8.`8888.       `8.`8888.      .8`8. `88888.     \n   ,8'   `8.`88'   `8.`8888.       `8.`8888.    .8' `8. `88888.    \n  ,8'     `8.`'     `8.`8888.  8b   `8.`8888.  .8'   `8. `88888.   \n ,8'       `8        `8.`8888. `8b.  ;8.`8888 .888888888. `88888.  \n,8'         `         `8.`8888. `Y8888P ,88P'.8'       `8. `88888.\n```\n\n[![Build Status](https://travis-ci.org/greenify/msa.svg?branch=master)](https://travis-ci.org/greenify/msa)\n[![NPM version](http://img.shields.io/npm/v/msa.svg)](https://www.npmjs.org/package/msa)\n[![Dependencies](https://david-dm.org/greenify/msa.png)](https://david-dm.org/greenify/msa)\n[![Code Climate](https://codeclimate.com/github/greenify/msa/badges/gpa.svg)](https://codeclimate.com/github/greenify/msa)\n[![NPM downloads](http://img.shields.io/npm/dm/msa.svg)](https://www.npmjs.org/package/msa)\n\n\n```html\n<script src=//cdn.biojs-msa.org/msa/0.3/msa.min.gz.js></script>\n```\n\nYes you can either link to the minified, gzipped CDN version or download the dev version from S3 .\n\n[![Min version](http://img.shields.io/badge/prod-35kB-blue.svg)](https://cdn.biojs-msa.org/msa/latest/msa.min.gz.js)  \n[![Dev version](http://img.shields.io/badge/dev-latest-yellow.svg)](https://s3-eu-west-1.amazonaws.com/biojs/msa/latest/msa.js) \n\nIn case\n* Amazon S3 should be ever down, there is a [redundant build server](https://drone.io/github.com/greenify/msa/files). \n* you need a uglified unzipped CDN version, just remove the `.gz` in the file name.\n* you want the latest version, replace the version number with `latest`.\n\n[![NPM](https://nodei.co/npm/biojs-vis-msa.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/biojs-vis-msa/)\n\nUse it\n------\n\n[Full screen](http://biojs-msa.org/app) mode.\n\nDemo\n-----\n\nThese examples show how you could embed the MSA viewer into your page.\n\n[![JSBin clustal](http://img.shields.io/badge/jsbin-clustal-blue.svg)](http://jsbin.com/quvex/4/edit?js,output) \n[![JSBin large](http://img.shields.io/badge/jsbin-large-blue.svg)](http://jsbin.com/zunuko/4/edit?html,js,output) \n\n\n[Current sniper](http://workmen.biojs.net/demo/msa) with different examples\n\n#### display an MSA\n\n![basic MSA](https://i.imgur.com/nQtfMmI.png)\n\n\n####  Features\n* runs purely in the Browser\n* import files in format like FASTA, Clustal, ...\n* be interactive and receive [Events](https://github.com/greenify/msa/wiki/Events)\n* filter, sort, hide the sequences\n* display sequence [features](https://github.com/greenify/biojs-vis-easy_features/) \n* extendable [Views](https://github.com/greenify/msa/wiki/Views) for your integration\n* customizable viewport\n* simplicity as design rule\n* export to fASTA\n* generate the consenus seq\n* more to come ...\n\n### Config\n\n```\n registerMouseHover: false,\n    registerMouseClicks: true,\n    importProxy: \"https://cors-anywhere.herokuapp.com/\"\n    eventBus: true\n    alphabetSize: 20\n    dropImport: false\n    debug: false\n    hasRef: false # hasReference\n\nvis:\n    sequences: true\n    markers: true\n    metacell: false\n    conserv: false\n    overviewbox: false\n    seqlogo: false\n    gapHeader: false\n    leftHeader: true\n\n    # about the labels\n    labels: true\n    labelName: true\n    labelId: true\n    labelPartition: false\n    labelCheckbox: false\n\n    # meta stuff\n    metaGaps: true\n    metaIdentity: true\n    metaLinks: true\n\nzoomer:\n    # general\n    alignmentWidth: \"auto\"\n    alignmentHeight: 225\n    columnWidth: 15\n    rowHeight: 15\n    autoResize: true # only for the width\n\n    # labels\n    textVisible: true\n    labelIdLength: 30\n    labelNameLength: 100\n    labelPartLength: 15\n    labelCheckLength: 15\n    labelFontsize: 13\n    labelLineHeight: \"13px\"\n\n    # marker\n    markerFontsize: \"10px\"\n    stepSize: 1\n    markerStepSize: 2\n    markerHeight: 20\n\n    # canvas\n    residueFont: \"13\" # in px\n    canvasEventScale: 1\n\n    # overview box\n    boxRectHeight: 2\n    boxRectWidth: 2\n    overviewboxPaddingTop: 10\n\n    # menu\n    menuFontsize: \"14px\"\n    menuItemFontsize: \"14px\"\n    menuItemLineHeight: \"14px\"\n    menuMarginLeft: \"3px\"\n    menuPadding: \"3px 4px 3px 4px\"\n\n    # meta cell\n    metaGapWidth: 35\n    metaIdentWidth: 40\n    metaLinksWidth: 25\n\n    # internal props\n    _alignmentScrollLeft: 0\n    _alignmentScrollTop: 0\n```\n\nFAQ\n----\n\nQ: How can I define my own color scheme?\n\n↝ [play in JSBin](http://workmen.biojs.net/jsbin/msa/colorscheme)\n↝ [read the documentation](https://github.com/greenify/biojs-util-colorschemes)\n\nDocumentation\n-------------\n\nSee below and head to the [wiki](https://github.com/greenify/msa/wiki/).\n\nPlease report bugs or feature request directly on github.\n\nGuidelines\n-----------\n\n* [KISS](http://en.wikipedia.org/wiki/KISS_principle) -> avoid komplexity\n* keep it modular\n* avoid boiler-plate code\n* avoid more than two args for public methods -> accepting a dictionary is more flexible\n* trust the linter (for coffeescript there is a default config)\n* max. 200 lines per file (-> better organization)\n\nBTW the use of Coffeescript is optional.\n\n\nStep 1) Setting up\n-----------------\n\n```bash\ngit clone https://github.com/greenify/msa\ncd msa\nnpm install\n```\n\n* __npm__: You will need the `npm` package manager (and node) for this. On most distributions there is a package, look [here](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager)\n\n__Infos__\n\n* This will also automatically validate your installation by running `gulp build`\n - generating browser builds for the codebase\n - executing all unit tests \n\nStep 2) Developing\n------------------\n\n```\n./w\n```\n\n(in the root dir)\n\nThis will automatically execute these two commands\n\n### 2.1 Watching and recompile\n\n```\nnpm run watch\n```\n\nThis will use [watchify](https://github.com/substack/watchify) to recompile the JS to the build folder on every change.\n\nHave fun coding.\nYou can also start [sniper](https://github.com/greenify/sniper), to view the snippets. Without global installation, just hit \n\n### 2.2 Example (snippets) server\n\n```\nnpm run sniper\n```\n\n(then you can browse the snippets at [localhost:9090/snippets](http:localhost:9090/snippets)).\n\n\n3) Unit Testing\n-------------------------\n\n### 3.1 Running tests from the CLI\n\n\n```\nnpm test\n```\n\n\nIf you install gulp globally (`npm install -g gulp`), you can run \n\nExecute all unit tests\n```\ngulp test\n```\n\nIf you wish to let it watch for file changes and rerun the test automatically, use `gulp watch`\n\n### 3.2 Adding your test\n\n* test without DOM interaction, can go into `test/mocha`\n* test with DOM interaction (= need to be run by a browser) -> `test/phantom`\n\nHints for phantom:\n\n* it takes way longer to run phantom tests (headless browser tests), than normal mocha tests\n* you need to add your phantom tests to `test/phantom/index.coffee`\n* there are sub directives\n - `test-mocha` wil only execute mocha tests\n - `test-phantom` will only execute phantom tests\n\n### 3.3 Debugging tests\n\nOpen the `tests/index.html` with your browser and set breakpoints.\nImportant: the coffeescript is not directly compiled in your browser, so in theory you need to compile everything to `all_tests.js`.\nHowever this is done automatically by `gulp test` or `gulp wacth`.\n\n\nCompiling for the browser\n--------------------------------\n\n```\ngulp build\n```\n\nThis is will regenerate the CSS and JS (+minimization).\nHowever this is done automatically by Travis (and on `npm install`), so you __normally don't need to run it__.\n(If you can't install gulp globally, hit `npm run preinstall`.).\nThe minimization is done by [Browserify](http://browserify.org/).\n\nPackage list\n-----------\n\n↝ [Package list](https://github.com/greenify/msa/wiki/Package-list)\n\n\nProject structure\n------------------\n\n* `browser.js` main file for browserify - defines the global namespace in the browser\n* `coffeelint.json` linting config for CoffeeScript (run it with `gulp lint`)\n* `css` stylesheet folder (previously used for SASS)\n* `gulpfile.js` task definition file (for [gulp](http://gulpjs.com/])\n* `package.json` [npm config](https://www.npmjs.org/doc/files/package.json.html)\n* `snippets` short coding snippets that are run by [`sniper`](https://github.com/greenify/sniper)\n* `src` the main source code\n* `test` unit tests that are run with either mocha or phantomjs (headless browser)\n\nWant to learn more?\n-------------------\n\nContinue at the [wiki](https://github.com/greenify/msa/wiki).\n",
  "readmeFilename": "README.md",
  "gitHead": "c444b4f9bd6659718c6d766d9d300113af7c40a9",
  "bugs": {
    "url": "https://github.com/greenify/msa/issues"
  },
  "_id": "msa@0.3.29",
  "_shasum": "f595ed10b4003252b7ad08662ec6dabf69b5628f",
  "_from": "msa@*"
}
