#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var join = path.join;
var fs = require('fs');
var cwd = process.cwd();
var Minilog = require('minilog');

var Server = require("..");
var staticProg = require("../lib/static.js");

var config = join(__dirname, '../package.json');

program
  .version(config.version)
  .description("a" + config.description)
  .usage('[options] [pkgdir]')
  .option('-p, --port <number>', 'port to run', 9090)
  .option('-c, --compile [directory]', 'Creates static output', false)
  .option('-v, --verbose', 'Increase verbosity', false)
  .parse(process.argv);

// default settings
var options = {
  config: "package.json",
  templateDir: "templates",
  snippets: "snippets",
};
// define templates
options.templates = {
  snip: "template.html",
  list: "list.html",
  all: "all.html"
};
var templates = options.templates;
var templateDir = join(__dirname, "/../templates");
for (var key in templates) {
  templates[key] = join(templateDir, templates[key]);
}

// PARSE cli

if (program.args.length === 0) {
  options.dirname = cwd;
} else {
  options.dirname = program.args[0];
}

options.port = program.port;
options.dirname = path.normalize(options.dirname);

if (program.verbose) {
  Minilog.enable();
}

if (program.compile) {
  console.log("WARNING: static compilation mode is in alpha - use with caution");

  if(program.compile !== true){
    options.outputDir = program.compile; 
  }

  staticProg(options).then(function(){
    console.log("=)");
  }).error(function(){
    console.log("error happened");
  });
} else {
  console.log("running: http://localhost:" + options.port);
  console.log("DIR:" + options.dirname);
  var server = new Server(options);
}
