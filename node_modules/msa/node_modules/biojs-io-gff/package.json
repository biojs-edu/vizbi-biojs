{
  "name": "biojs-io-gff",
  "description": "A GFF (general feature format) parser",
  "version": "0.1.10",
  "homepage": "https://github.com/greenify/biojs-io-gff",
  "author": {
    "name": "greenify",
    "email": "greeenify@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/greenify/biojs-io-gff.git"
  },
  "bugs": {
    "url": "https://github.com/greenify/biojs-io-gff/issues"
  },
  "licenses": [
    {
      "type": "Apache 2",
      "url": "https://github.com/greenify/biojs-io-gff/blob/master/LICENSE"
    }
  ],
  "main": "lib/index",
  "scripts": {
    "test": "gulp test",
    "build-browser": "mkdirp build; browserify browser.js -o build/biojs-io-gff.js",
    "build-browser-min": "gulp build-browser-gzip",
    "prepublish": "gulp",
    "watch": "mkdirp build; watchify browser.js -o build/biojs-io-gff.js"
  },
  "dependencies": {
    "biojs-io-parser": "^1.0.0",
    "gulp": "^3.8.10",
    "nets": "^1.0.0"
  },
  "devDependencies": {
    "browserify": "~4.2.0",
    "chai": "^1.9.1",
    "gulp": "^3.8.8",
    "gulp-browserify": "^0.5.0",
    "gulp-gzip": "0.0.8",
    "gulp-jshint": "^1.8.4",
    "gulp-mocha": "^1.0.0",
    "gulp-rename": "^1.2.0",
    "gulp-rimraf": "^0.1.0",
    "gulp-uglify": "^1.0.1",
    "gulp-watch": "^1.0.2",
    "mkdirp": "^0.5.0",
    "mocha": "~1.20.1",
    "uglify-js": "~2.4.15",
    "watchify": "^1.0.2"
  },
  "shields": {
    "build": {
      "img": "https://travis-ci.org/greenify/biojs-io-gff.svg?branch=master",
      "href": "https://travis-ci.org/greenify/biojs-io-gff"
    }
  },
  "keywords": [
    "biojs",
    "io",
    "gff",
    "parser",
    "feature"
  ],
  "readme": "# biojs-io-gff\n\n[![Build Status](https://secure.travis-ci.org/greenify/biojs-io-gff.png?branch=master)](http://travis-ci.org/greenify/biojs-io-gff)\n[![NPM version](https://badge-me.herokuapp.com/api/npm/biojs-io-gff.png)](http://badges.enytc.com/for/npm/biojs-io-gff) \n\n> A GFF (general feature format) parser\n\n[Official Spec](https://www.sanger.ac.uk/resources/software/gff/spec.html)\n\n```\n<seqname> <source> <feature> <start> <end> <score> <strand> <frame> [attributes] [comments]\n```\n\nShort [description about the formats](https://github.com/greenify/biojs-vis-msa/wiki/Annotation-Features).\n\n## Supported formats\n\n* [GFF 3](http://www.sequenceontology.org/gff3.shtml)\n* [Jalview feature format](http://www.jalview.org/help/html/features/featuresFormat.html)\n\n## Getting Started\nInstall the module with: `npm install biojs-io-gff`\n\n```javascript\nvar gff = require('biojs-io-gff');\n```\n\n## Documentation\n\n#### `.read(file, cb)`\n\nCallback with `parseSeqs` or Promise\n\n```javascript\nvar p = gff.read(\"https://cdn.rawgit.com/greenify/biojs-io-gff/master/test/import.gff3\");\n// ..\np.then(function(seqs){\n  // handle the model\n}, function(err){\n\tconsole.warn(err);\n});\n```\n\n#### `.parseSeqs(str)` (alias: `parse`)\n\n**Parameter**: `GFF file` (as string)\n**Type**: `String`\n**Example**: `SEQ1  EMBL  atg  103  105  .  +  0`\n\nReturns a dictionary of all sequences. Each sequences is an array of its features.\n\n```javascript\ngff.parseSeqs('SEQ1  EMBL  atg  103  105  .  +  0');\n```\n\n__Result__\n\n```\n{ \"seqs\":\n  { \"SEQ1\": \n\t\t[ { seqname: 'SEQ1',\n\t\t    source: 'EMBL',\n\t\t    feature: 'atg',\n\t\t    start: 103,\n\t    \tend: 105,\n\t    \tstrand: '+',\n\t    \tframe: 0,\n\t    \tattributes: {} } ]\n  },\n  \"config\": {\n\ttype: \"gff3\"\n  }\n}\n```\n\n#### `.parseLines(str)`\n\n**Parameter**: `GFF file`\n**Type**: `String`\n**Example**: `SEQ1  EMBL  atg  103  105  .  +  0`\n\nThe 'parse' method converts a GFF into its JSON representation.\n\nHow to use this method\n\n```javascript\ngff.parseLines('SEQ1  EMBL  atg  103  105  .  +  0');\n```\n\n__Result__\n\n```\n{ \"features\":\n\t[{ seqname: 'SEQ1',\n    \tsource: 'EMBL',\n    \tfeature: 'atg',\n    \tstart: 103,\n    \tend: 105,\n    \tstrand: '+',\n    \tframe: 0,\n    \tattributes: {} } ],\n  \"config\": {\n\ttype: \"gff3\"\n  }\n}\n```\n#### `.exportLines(lines)`\n\nReturn the textual GFF representation for the given lines\n\n#### `.exportSeqs(seqs)` (alias: `export`)\n\nReturn the textual GFF representation for the given seqs\n\n#### `.parseLine(line)`\n\n**Parameter**: `GFF line`\n**Type**: `String`\n**Example**: `SEQ1  EMBL  atg  103  105  .  +  0`\n\nThe 'parseLine' method converts a GFF line into its JSON representation.\n\n\n```javascript\ngff.parseLine('SEQ1  EMBL  atg  103  105  .  +  0');\n```\n\n## Gotchas\n\n* undefined properties (dots) are removed (checking for undefined is native)\n\n## Contributing\n\nPlease submit all issues and pull requests to the [greenify/biojs-io-gff](http://github.com/greenify/biojs-io-gff) repository!\n\n## Support\nIf you have any problem or suggestion please open an issue [here](https://github.com/greenify/biojs-io-gff/issues).\n\n## License \n\n\nThis software is licensed under the Apache 2 license, quoted below.\n\nCopyright (c) 2014, greenify\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n",
  "readmeFilename": "README.md",
  "gitHead": "e08f7d535da292ba107a3f23b56cc6cdd79fc31b",
  "_id": "biojs-io-gff@0.1.10",
  "_shasum": "f66533101a42c41a30202c8eeb436ab0667ac9a9",
  "_from": "biojs-io-gff@>=0.0.0 <1.0.0"
}
